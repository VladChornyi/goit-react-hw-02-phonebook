{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","components/contactsForm/ContactsForm.module.css","components/contactsForm/ContactsForm.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","ContactsForm","state","name","number","onHandleSubmit","e","preventDefault","props","addContact","onHandleChange","target","value","setState","className","s","form","onSubmit","this","title","data","type","pattern","required","onChange","addBtn","Component","ContactsList","contacts","onRemoveContact","map","contact","delBtn","onClick","id","Filter","onChangeFilter","App","filter","user","toLowerCase","includes","alert","shortid","generate","prev","getFilteredContacts","normalizedFilter","changeFilter","removeContact","contactId","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6af195b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2Hjno\",\"data\":\"Filter_data__-xlGI\",\"title\":\"Filter_title__2qa10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"ContactsList_delBtn__3dobF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__14-I6\",\"addBtn\":\"ContactsForm_addBtn__2gVxs\",\"data\":\"ContactsForm_data__2wiZx\",\"title\":\"ContactsForm_title__3geq3\"};","import React, { Component } from 'react';\r\nimport s from './ContactsForm.module.css'\r\n\r\n\r\nclass ContactsForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n      onHandleSubmit = (e) => {\r\n          e.preventDefault();\r\n          this.props.addContact(this.state)\r\n   }\r\n\r\n  onHandleChange = (e) => {\r\n    const {name, value} = e.target\r\n    this.setState( {[name]: value} )\r\n  }\r\n    render() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.onHandleSubmit} >\r\n                <label className={s.title} >\r\n                    Name\r\n              <input\r\n                className={s.data}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange ={this.onHandleChange}\r\n                    />\r\n                </label>\r\n                <label className={s.title} >\r\n                    Number\r\n              <input\r\n                        className={s.data}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.onHandleChange}\r\n                        />\r\n                </label>\r\n                \r\n        <button className={s.addBtn} type=\"submit\">add contact</button>\r\n      </form>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import s from './ContactsList.module.css'\r\nimport PropTypes from \"prop-types\"; \r\n\r\nconst ContactsList = ({contacts,onRemoveContact}) => {\r\n    return (\r\n    <>\r\n        <ul>\r\n            {contacts.map((contact) => (\r\n                <li key={contact.id}>{`${contact.name} : ${contact.number}`}\r\n                    <button\r\n                         className={s.delBtn}\r\n                        type='button'\r\n                        name='delete'\r\n                    onClick={()=>onRemoveContact(contact.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </>\r\n        \r\n    );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};","import s from './Filter.module.css'\r\nimport PropTypes from \"prop-types\"; \r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n    return (\r\n        <>\r\n        <label className={s.title} >Find contacts by name\r\n                <input\r\n                    className={s.data}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => onChangeFilter(e.target.value)} />\r\n        </label>\r\n        </>\r\n    );\r\n}\r\nexport default Filter;\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\nimport ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport Filter from './filter/Filter';\nimport shortid from 'shortid';\n\nclass App extends Component {\n state = {\n   contacts: [\n     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n   ],\n   filter:''\n \n }\n  addContact = (number) => {\n    const searchRepeat = this.state.contacts\n      .map((user) => user.name.toLowerCase())\n      .includes(number.name.toLowerCase());\n    \n    if (searchRepeat) {\n      alert(`${number.name} is already in contacts`)\n    }\n    else {\n      const contact = {\n        ...number,\n        id: shortid.generate()\n      }\n      this.setState(prev => ({ contacts: [...prev.contacts, contact] }));\n    }\n  };\n\n\n  getFilteredContacts = () => {\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n  }\n\n   changeFilter = (filter) => {\n    this.setState({ filter });\n   };\n  \n   removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n  \n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactsForm addContact={this.addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n          <ContactsList contacts={this.getFilteredContacts()} onRemoveContact={this.removeContact}  />\n      </div>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}